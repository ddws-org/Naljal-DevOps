---
# Source: kafka-connect/templates/service.yaml
# service.yaml---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect
  namespace: backbone 
  annotations: 
  labels:
    app: kafka-connect      
    group: infra   
spec:
  selector:
    app: kafka-connect      
    group: infra    
  ports:
  - name: http
    port: 8083
    targetPort: 8083
---
# Source: kafka-connect/templates/deployment.yaml
# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  namespace: backbone
  labels:
    app: kafka-connect      
    group: infra   
spec:
  selector:
    matchLabels:
      app: kafka-connect      
      group: infra     
  replicas: 3
  template:
    metadata:  
      annotations:      
        deployment-timestamp: "20240905220651"        
      labels:
        app: kafka-connect      
        group: infra            
    spec:
      volumes:
      - name: elasticsearch-certs
        secret:
          defaultMode: 420
          secretName: elasticsearch-certs
      - name: keystore
        emptyDir: {}
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
              labelSelector:
                matchLabels:
                  app: kafka-connect      
                  group: infra     
      initContainers:
        - name: init-keystore
          image: adoptopenjdk:11-jre-hotspot
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e;
              openssl pkcs12 -export -in /etc/kafka-connect/secrets/tls.crt -inkey /etc/kafka-connect/secrets/tls.key -out /tmp/keystore/keystore.p12 -name elasticsearch-master -passout pass:changeit;
              keytool -importkeystore -deststorepass changeit -destkeypass changeit -destkeystore /tmp/keystore/es.keystore.jks -srckeystore /tmp/keystore/keystore.p12 -srcstoretype PKCS12 -srcstorepass changeit -alias elasticsearch-master;
              keytool -import -file /etc/kafka-connect/secrets/ca.crt -alias elasticsearch-master -keystore /tmp/keystore/es.truststore.jks -storepass changeit -noprompt;
          volumeMounts:
            - mountPath: /etc/kafka-connect/secrets
              name: elasticsearch-master-certs
            - mountPath: /tmp/keystore
              name: keystore
                    
      containers:      
        - name: kafka-connect
          image: naljal/cp-kafka-connect:s3-7.5.2
          imagePullPolicy: IfNotPresent             
          ports:
            - name: http
              containerPort: 8083
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                - sh
                - -c
                - sleep 10
          volumeMounts:
          - name: keystore
            mountPath: /tmp/keystore
                                   
          env:
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: "PLAINTEXT://kafka-kraft-controller-headless.backbone:9092"
            - name: CONNECT_GROUP_ID
              value: kafka-connect
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: kafka-connect-config
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: kafka-connect-offset
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: kafka-connect-status
            - name: KAFKA_HEAP_OPTS
              value: "-Xms512M -Xmx512M"
            - name: "CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR"
              value: "3"
            - name: "CONNECT_INTERNAL_KEY_CONVERTER"
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: "CONNECT_INTERNAL_VALUE_CONVERTER"
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: "CONNECT_KEY_CONVERTER"
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: "CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE"
              value: "false"
            - name: "CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR"
              value: "3"
            - name: "CONNECT_PLUGIN_PATH"
              value: "/usr/share/java"
            - name: "CONNECT_STATUS_STORAGE_REPLICATION_FACTOR"
              value: "3"
            - name: "CONNECT_VALUE_CONVERTER"
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: "CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE"
              value: "false"   
                                                 
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "1Gi"

options.ConfigDir: ../../deploy-as-code/helm
