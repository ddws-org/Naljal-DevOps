# Common Labels
labels:
  app: "kibana-v1"
namespace: es-cluster  

# Ingress Configs
ingress:
  enabled: true
  context: "kibana"
  additionalAnnotations: |
    {{- if and (.Values.global.context.path) (has "oauth2-proxy" .Values.global.context.list) }}
    nginx.ingress.kubernetes.io/auth-signin:  https://$host/{{ .Values.global.context.path }}/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url:     https://$host/{{ .Values.global.context.path }}/oauth2/auth
    {{- else }}
    nginx.ingress.kubernetes.io/auth-signin:  https://$host/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url:     https://$host/oauth2/auth
    {{- end }}

# Init Containers Configs
initContainers: {}

# Container Configs
image:
  repository: "docker.elastic.co/kibana/kibana"
  tag: 8.11.3
replicas: "1"
httpPort: 5601
elasticsearchHosts: "http://elasticsearch-data-v1.es-cluster:9200"
serverBasePath: "/kibana"
healthCheckPath: "kibana/app/kibana"
healthChecks:
  enabled: true
  livenessProbePath: "/kibana/"
  readinessProbePath: "/kibana/"            

# Additional Container Envs
env: |
  {{- if and (.Values.global.context.path) (has .Values.name .Values.global.context.list) }}
  - name: SERVER_BASEPATH
    value: /{{ .Values.global.context.path }}{{ .Values.serverBasePath }}
  {{- else }}
  - name: SERVER_BASEPATH
    value: {{ .Values.serverBasePath | quote }}
  {{- end }}
  - name: ELASTICSEARCH_HOSTS
    value: {{ .Values.elasticsearchHosts | quote }}
  - name: SERVER_REWRITEBASEPATH
    value: "true"   